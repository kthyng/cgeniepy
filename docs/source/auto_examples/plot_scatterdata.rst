
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_scatterdata.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_scatterdata.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_scatterdata.py:


=========================================
Plot the 1D ScatterData
=========================================

This example shows how to plot the 1D ScatterData object. I use a CO2 data file from the Antarctic EDC ice core (https://doi.pangaea.de/10.1594/PANGAEA.472488) as an example.

.. GENERATED FROM PYTHON SOURCE LINES 8-35



.. image-sg:: /auto_examples/images/sphx_glr_plot_scatterdata_001.png
   :alt: plot scatterdata
   :srcset: /auto_examples/images/sphx_glr_plot_scatterdata_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <frozen importlib._bootstrap>:241: RuntimeWarning: scipy._lib.messagestream.MessageStream size changed, may indicate binary incompatibility. Expected 56 from C header, got 64 from PyObject






|

.. code-block:: Python


    from cgeniepy.table import ScatterData
    import matplotlib.pyplot as plt

    # Load data
    edc_co2 = ScatterData("/Users/yingrui/cgeniepy/src/data/EDC_CO2.tab", sep='\t')
    edc_co2.set_index(['Age [ka BP]'])

    # Create subplots
    fig, ax = plt.subplots()

    # Plot the raw data
    edc_co2.to_ScatterDataVis().plot(var='CO2 [ppmv]', ax=ax, label='Raw Data', edgecolor='black', facecolor='none', marker='o')
    # Plot the interpolated data (based on cubic spline interpolation)
    interpolated_data = edc_co2.interpolate(var='CO2 [ppmv]').to_dataframe()
    interpolated_data.plot(ax=ax, x='Age [ka BP]', y='interpolated_values', label='Interpolated', linewidth=2)

    # Use rolling mean to smooth the data
    smoothed_data = edc_co2.rolling(window=2).mean()
    smoothed_data['CO2 [ppmv]'].plot(ax=ax, label='2pt Rolling Mean', linewidth=2)

    ax.legend()
    ax.grid(True)
    ax.minorticks_on()

    plt.show()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.886 seconds)


.. _sphx_glr_download_auto_examples_plot_scatterdata.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_scatterdata.ipynb <plot_scatterdata.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_scatterdata.py <plot_scatterdata.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

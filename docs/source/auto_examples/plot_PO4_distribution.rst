
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_PO4_distribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_PO4_distribution.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_PO4_distribution.py:


=========================================
Plot 2D transect of tracers in each basin
=========================================

This example plots the modelled PO4 distribution in cGENIE.

The following features in the package are used:

#. Access data through `cgeniepy.model` module

#. A basin-mask operation

#. A linear interpolation

#. Get additional color palette (mirrors the one in ODV)

#. Customise the plotting details

.. GENERATED FROM PYTHON SOURCE LINES 20-42



.. image-sg:: /auto_examples/images/sphx_glr_plot_PO4_distribution_001.png
   :alt: Atlantic, Pacific, Indian
   :srcset: /auto_examples/images/sphx_glr_plot_PO4_distribution_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <frozen importlib._bootstrap>:241: RuntimeWarning: scipy._lib.messagestream.MessageStream size changed, may indicate binary incompatibility. Expected 56 from C header, got 64 from PyObject
    /Users/yingrui/cgeniepy/src/cgeniepy/model.py:49: UserWarning: No gemflag is provided, use default gemflags: [biogem]
      warnings.warn("No gemflag is provided, use default gemflags: [biogem]")






|

.. code-block:: Python


    from cgeniepy.model import GenieModel
    from cgeniepy.plot import CommunityPalette
    import matplotlib.pyplot as plt

    model = GenieModel("/Users/yingrui/Science/lgm_foram_niche/model/muffin.CBE.worlg4.BASESFeTDTL.SPIN")
    ocn_po4 = model.get_var("ocn_PO4").isel(time=-1)

    fig, axs=plt.subplots(nrows=1, ncols=3, figsize=(15, 3), tight_layout=True)

    basins = ['Atlantic', 'Pacific', 'Indian']

    odv_cmap = CommunityPalette().get_palette('ODV', reverse=True)

    for i in range(3):
        basin_data = model.get_var('ocn_PO4').isel(time=-1).mask_basin(base='worjh2',basin=basins[i], subbasin='')
        basin_data_interp = basin_data.mean(dim='lon').interpolate().to_GriddedDataVis()
        basin_data_interp.aes_dict['pcolormesh_kwargs']['cmap'] = odv_cmap
        basin_data_interp.plot(ax=axs[i], contour=True)
        axs[i].title.set_text(basins[i])

    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.661 seconds)


.. _sphx_glr_download_auto_examples_plot_PO4_distribution.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_PO4_distribution.ipynb <plot_PO4_distribution.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_PO4_distribution.py <plot_PO4_distribution.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
